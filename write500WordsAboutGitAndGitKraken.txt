

In the video “Git and GitKraken”, the narrator explains how to authenticate GitHub so it can sync with GitKraken, manage remotes, and create pull requests in GitKraken and how that updates in GitHub.
Firstly, Git is a system designed for efficiency in team projects and it allows you to view your file history and changes made on your local machine and GitHub when in sync. In order to authenticate GitKraken to talk with GitHub, you need to use an SSH key. Once authenticated you can use your push and pull commands to sync your local system with GitHub. One helpful tool to make sure you have everything in sync, is noticing the different icons next to your changes in the repo. The narrator explains the one with the computer icon indicates the changes on your local system, and the icon with the cat indicates the changes made on GitHub. If both icons are side by side, or on the same line, they are in sync.
Along the same lines, to make sure GitHub is in sync with GitKraken you need to use the “Pull” action. By clicking on the “Pull” button selecting the “Pull” action, it will sync whatever changes were on GitHub from yourself or your team with your local machine.
Similarly, in order to make sure your machine is in sync with GitHub, you must use the “Push” action. Just like the “Pull” action, you will click on the “Push” button and select the “Push” action. It will then sync any of your local changes with GitHub for yourself and your potential team to see.

Prior to pushing or pulling any changes from or to GitHub and your local machine, you must first stage and commit your changes to your repository.

When staging your changes, you are essentially previewing any changes that you made prior to hitting the submit or “commit” button. When your changes are staged, you will notice that any content removed is highlighted in red and any content added is highlighted in green. Once you preview your changes and you like them you will then hit the commit button at the bottom.

Committing these changes sets it in stone, but not to fear if a mistake is made you can undo it by reverting the commit or just hitting the “Undo” button at the top. At this point, as mentioned earlier you will then push your committed changes to GitHub to sync your local machine with the cloud so yourself and your potential team can view it and pull those changes to their own machine.

If you want to test the waters, you can create a branch by right clicking your main branch and clicking on “create a branch”. You can label it whatever you’d like and make whatever changes you would like to there. Once you would like to push those to GitHub, it will ask you to create that branch in GitHub as it does not exist there yet. You can simply click “Submit” and it will name it as you see it on your local machine.
Lastly, once you would like your changes in that new branch to be merged with your existing branch you can make a “Pull request”. The narrator explains that the easiest way to do so is to drag and drop your new branch onto the existing branch. This will automatically open and populate the pull request, and once you submit that it will sync with GitHub and your team can view it. Here they can add additional comments about these changes, and if something else should be done. Once satisfied, you simply select the “Merge pull request” button in GitHub and the merger is complete!
In closing, GitHub and GitKraken are wonderful tools to stay up to date with all changes on a project, and keep in contact with your changes and your team! 
